{
 "cells": [
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# Assignment 7\n",
    "## Due June 12th\n",
    "### names: Florence Lopez, Jennifer Them"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 1,
   "metadata": {
    "collapsed": true
   },
   "outputs": [],
   "source": [
    "%matplotlib inline\n",
    "import matplotlib.pyplot as plt\n",
    "import numpy as np\n",
    "from sklearn import svm\n",
    "from sklearn.model_selection import GridSearchCV\n",
    "import matplotlib.pyplot as plt\n",
    "from sklearn.datasets import make_classification\n",
    "from sklearn.metrics import zero_one_loss\n",
    "from sklearn.preprocessing import normalize\n",
    "\n",
    "\n",
    "np.random.seed(42)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Exercise 3"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "metadata": {
    "collapsed": false
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "1000"
      ]
     },
     "execution_count": 2,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "data, labels = make_classification(n_samples=1000, n_features=30, n_informative=15, n_redundant=2, n_repeated=2, n_classes=2, n_clusters_per_class=2, random_state=42, class_sep=0.5)\n",
    "len(data)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### a)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "metadata": {
    "collapsed": false
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "334"
      ]
     },
     "execution_count": 3,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "split = int(np.ceil(len(data)/3))\n",
    "split"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "metadata": {
    "collapsed": false
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "(668, 30)"
      ]
     },
     "execution_count": 4,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "train_data = data[:2*split]\n",
    "test_data = data[2*split:]\n",
    "train_labels = labels[:2*split]\n",
    "test_labels = labels[2*split:]\n",
    "train_data.shape"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### b)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "metadata": {
    "collapsed": false
   },
   "outputs": [],
   "source": [
    "parameters = {'C':[0.001, 0.01, 0.1, 1, 10, 100, 1000], \n",
    "              'gamma': [0.001, 0.01, 0.1, 1, 10, 100, 1000, 'auto']}\n",
    "Cs = parameters['C']\n",
    "gammas = parameters['gamma']"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "metadata": {
    "collapsed": false
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "{'C': 10, 'gamma': 0.01}"
      ]
     },
     "execution_count": 6,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "svc = svm.SVC(kernel = 'rbf')\n",
    "clf = GridSearchCV(svc, param_grid = parameters)\n",
    "clf.fit(train_data, train_labels)\n",
    "clf.best_params_"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### The best parameters seem to be $C = 10$, $\\gamma = 0.01$."
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### c)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "metadata": {
    "collapsed": false
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "0.12951807228915657"
      ]
     },
     "execution_count": 7,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# perform 0-1 loss: \n",
    "svc = svm.SVC(kernel = 'rbf', C = 10, gamma = 0.01)\n",
    "svc.fit(train_data, train_labels)\n",
    "Y_pred = svc.predict(test_data)\n",
    "loss = zero_one_loss(test_labels, Y_pred)\n",
    "loss"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 8,
   "metadata": {
    "collapsed": true
   },
   "outputs": [],
   "source": [
    "def unbalanced_loss(true_labels, predicted_labels):\n",
    "    loss_sum = 0.0\n",
    "    for i in list(range(len(true_labels))):\n",
    "        if true_labels[i] == 1 and predicted_labels[i] == 0: \n",
    "            loss_sum = loss_sum + 0.2\n",
    "        if true_labels[i] == 0 and predicted_labels[i] == 1: \n",
    "            loss_sum = loss_sum + 1.8\n",
    "        if true_labels[i] == predicted_labels[i]:\n",
    "            loss_sum = loss_sum + 0.0\n",
    "    return loss_sum/len(true_labels)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 9,
   "metadata": {
    "collapsed": false
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "0.11265060240963855"
      ]
     },
     "execution_count": 9,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "loss_unbalanced = unbalanced_loss(test_labels, Y_pred)\n",
    "loss_unbalanced"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### d)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 10,
   "metadata": {
    "collapsed": true
   },
   "outputs": [],
   "source": [
    "zero_loss = []\n",
    "unbalanced = []\n",
    "params = []\n",
    "for c in Cs: \n",
    "    svc = svm.SVC(kernel = 'rbf', C = c)\n",
    "    svc.fit(train_data, train_labels)\n",
    "    Y_pred = svc.predict(test_data)\n",
    "    zero_loss.append(zero_one_loss(test_labels, Y_pred))\n",
    "    unbalanced.append(unbalanced_loss(test_labels, Y_pred))\n",
    "    params.append(c)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 11,
   "metadata": {
    "collapsed": false
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<matplotlib.text.Text at 0x11013fd68>"
      ]
     },
     "execution_count": 11,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "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\n",
      "text/plain": [
       "<matplotlib.figure.Figure at 0x1075db390>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "# plot losses against Cs\n",
    "plt.figure()\n",
    "plt.semilogx(Cs, zero_loss, c=\"red\")\n",
    "plt.semilogx(Cs, unbalanced, c=\"blue\")\n",
    "plt.title('0-1-loss and unbalanced loss for different Cs')\n",
    "plt.xlabel('C')\n",
    "plt.ylabel('Risk')"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### We would prefer $C = 0.01$ for the unbalanced loss and $C = 1$ for the 0-1 loss. "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 12,
   "metadata": {
    "collapsed": true
   },
   "outputs": [],
   "source": [
    "zero_loss = []\n",
    "unbalanced = []\n",
    "params = []\n",
    "for c in Cs: \n",
    "    svc = svm.SVC(kernel = 'rbf', C = c, gamma = 0.01)\n",
    "    svc.fit(train_data, train_labels)\n",
    "    Y_pred = svc.predict(test_data)\n",
    "    zero_loss.append(zero_one_loss(test_labels, Y_pred))\n",
    "    unbalanced.append(unbalanced_loss(test_labels, Y_pred))\n",
    "    params.append(c)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 13,
   "metadata": {
    "collapsed": false
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<matplotlib.text.Text at 0x110acd358>"
      ]
     },
     "execution_count": 13,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "iVBORw0KGgoAAAANSUhEUgAAAYUAAAEaCAYAAAD+E0veAAAABHNCSVQICAgIfAhkiAAAAAlwSFlz\nAAALEgAACxIB0t1+/AAAIABJREFUeJzt3XeYVPW9x/H3FxYQpChNlI6oBGt0JTGxg90ETXxs0RtL\n9GLvooLYQMEu0YSoUe+1odEkkgi2GDVGoy72fgFBULooRfp+7x+/s7vDMrM7OzuzZ8rn9Tzz7Mw5\nZ+Z8fzM75zPnd5q5OyIiIgDN4i5ARETyh0JBRESqKRRERKSaQkFERKopFEREpJpCQUREqikU8pSZ\nzTSzIXHX0VBmtq+ZzcnRa79kZr/J8LkPmNnobNfUGGbmZtY/xbiM25pBHWZm95vZEjN7M0fzqP5/\nNrMrzOzehHFHmtlsM1tuZj80s+3M7F0zW2Zm5+aiHklNoZAhM+toZn8xsxVmNsvMjq9n+rPNrMLM\nVpvZA01Upkg69gQOAHq4+6Bcz8zdr3f3xMC7GTjb3du6+zvApcA/3b2du4/PdT2J0v1RY2aDzGyy\nmX1rZt+Y2ZtmdnJT1JhrCoXM3QWsAbYAfgX83sy2r2P6r4HRwH1NUJtIQ/QGZrr7ioY+0czKsjT/\nj+p43NT11DePPYAXgZeB/kAn4Azg4FzPuykoFDJgZpsCvwSudPfl7v4q8BRwYqrnuPuf3f2vwOIM\n5tfKzG43s6+j2+1m1ioa19nM/p7wi+VfZtYsGjfczL6KVsM/M7PBKV7/MDN7x8yWRqvxVyeM6xN1\nc/zazL40s0VmNiJhfOuoa2aJmX0M7F5HO6peqyxhWHU3iZmdZGavmtnN0et9YWaH1HqZraNfZUvN\n7Ckz65jwWn8ys3lm9p2ZvZIqpM1s8+g9WxjN5+9m1qNWTdeZ2b+j9+45M+ucMH5PM3stes9nm9lJ\nCZ/TzdH7NN/MJphZ64TnXWJmc6PP8JRU71OSepuZ2chojXSBmf2vmXWIxm1iZg+Z2eKonrfMbIuE\n93NG1IYvzOxXSV77VOBeYI+o++aaaPhpZjYt+p+aZGZbJTzHzewsM/s/4P9S1HxiVO/ixP+XaNzV\nUc2tzGw50Bx4z8ymm9mLwH7AnVE929b1vlr0yz76X58H3B8NP9xCF9S30We1U8L8Z5rZxWb2fvS/\n8lj0Pm4KTAG2iua9PLHdCW4C/sfdx7n7Ig+muvsx0eun/E4WBHfXrYE34IfA97WGXQT8LY3njgYe\nSGO6mcCQ6P61wH+ArkAX4DXgumjcDcAEoEV02wswYDtgNrBVNF0fYOsU89oX2JHwI2EnYD5wRMLz\nHLgHaA3sDKwGfhCNHwv8C+gI9AQ+BOakmE/Va5UlDHsJ+E10/yRgLXAaYUFxBmENyxKm/QrYAdgU\neBJ4KOG1TgHaAa2A24F3E8Y9AIyO7ncihHqbaPo/AX+tVdN0YNuozS8BY6NxvYFlwHHR+90J2CUa\ndxswKXov2gF/A26Ixh0cva9VtT8SvRf9U7xXie/LKcA0oB/QFvgz8GA07r+j+bSJ3rPdgPbRPJYC\n20XTbQlsn2JeJwGvJjzeH1gE7Bq9l78FXkkY78DzUTtbJ3m9gcByYO/o+bcC66j5f7661ue2wfuQ\n2PY03td9o9ceF82rNeH7uQD4UfSe/JrwfWqV8N16E9gqes1PgGEJr5f0/zca3wZYD+xXxzRJv5Nx\nL7fSvcVeQCHeog95Xq1hpwEvpfHcTEJhOnBowriDCKv7EALjqdoLF8Jq7QJgCNCige27Hbgtut8n\n+tL2SBj/JnBsdH8GcHDCuNNTfalILxSmJYxrE03fLWHasQnjBxK68Jonmddm0XM7RI8fIAqFJNPu\nAiypVdPIhMdnAs9E9y8H/pLkNQxYQULwAnsAX0T376tV+7akHwr/AM5MGLcdITzLCIHxGrBTredv\nCnxLCL+NFty1pj2JDUPhj8CNCY/bRvPrEz12YP86Xm8UMLFWLWvIIBTSeF/3jV57k4Txvyf60ZQw\n7DNgn4Tv1gkJ424EJiS8Xl2h0D2qd0Ad0yT9ThbKrXBWafLLcsKvsUQdCL8gMbMpCaufG62y15bG\n9FsBsxIez4qGQViVnQY8F3UVXAbg7tOA8wlfwAVmNjHFqjBm9iMz+2fUnfIdMAzoXGuyeQn3vycs\nKKpqm12rtsaono+7fx/dbZswvva8WgCdzay5mY2NuiCWEr74sHE7MLM2ZvaHqHtjKfAKsJmZNU9W\nBxu2tychpGvrQgixqVG3wbfAM9FwaNz7lOzzLyNsz3oQeBaYGHVL3WhmLTxsHziG8FnONbOnzWxA\nJvNz9+WEbs/uCdPMrv2kWs+vHh/V0uBu00h97yvAQndflfC4N3BR1fTRc3pS852B1J9vfZYAlYQ1\nr1SSficLhUIhM58DZWa2TcKwnYk2jrn7IR72pGjr7g/X92JpTP814R+9Sq9oGO6+zN0vcvd+wM+B\nCy3aduDuj7j7ntFznbCKncwjhNXznu7egbDqa/XVHZlL+MIl1pZK1YbMNgnDuqU5nyq157WW0NVx\nPDCUsGbUgbBWAsnbcRHh1/aP3L09oZsj1bS1zQa2TjJ8EbCS0EWzWXTr4O5VC5uGvE+1Jfv81wHz\n3X2tu1/j7gOBnwCHA/8F4O7PuvsBhAXYp4QuwAbPL+pr70TouqtS1+mVN2irmbWJnp+J+t7XZLXM\nBsYkTL+Zu7dx90fTmF+dp42Ofqi8TlgDSzVNyu9kIVAoZCD65fNn4Foz29TM9iR8+A+meo6ZlZnZ\nJoQ+zubRhq1095R4FBhpZl0sbPAcBTwUve7hZtbfzAz4jtDfWWlhX+/9LWyQXkX4YlWmeP12wDfu\nvsrMBhEWsOl6HLjcwsbbHsA5qSZ094WEBcsJ0S/7U0i+gK3LCWY2MFrQXAs84e7rozasJvwibQNc\nX8drtCO8H99a2FB9VQPm/zAwxMyOjj7TTma2i7tXEha6t5lZVwAz625mB0XPexw4KaH2hszzUeAC\nM+trZm2jtj3m7uvMbD8z2zFay1lKCMlKM9vCzIZGC/TVhLXbVJ9/svmdbGa7RP8/1wNvuPvMNJ//\nBHC4hQ3yLQmfU0bLmjTe12TuAYZFa8AWfUcPM7N2acxyPtDJog35KVxK+CwvMbNOUU07m9nE6H7S\n72Qa884LCoXMnUnYqLWA8Ev7DHevaze6kYQF0WXACdH9kWnOazRQAbwPfAC8HQ0D2AZ4gfClfx34\nnbv/k7DRbSzhl9Y8wkbqy+toy7VmtowQOI+nWRfANYSuhi+A56gjGCOnAZcQFt7bE/rDG+JBwvaB\necAmQNXBTf8b1fEV8DFhw3wqtxM+u0XRdM+kO3N3/xI4lLC28Q3wLmEtEWA4odvgP1G31AuENRLc\nfUo03xejaV5Md56E7REPErq5viCEfFX4diMshJcSNpi+HE3bDLiQ8Kv/G2Afwob7dNr4AnAlYUP+\nXEJwH5tusdH34CzC92IuoculMQc0pnxfU8y/gvB/dmc072mE7Sbp1P4pIRRnRF1PG3W5uvtrhI3x\n+0fTfQPcDUyOJkn1nSwIVXt1iIiIaE1BRERqKBRERKSaQkFERKopFEREpJpCQUREquX8jILZ1rlz\nZ+/Tp0/cZYiIFJSpU6cucvcu9U1XcKHQp08fKioq4i5DRKSgmFlap1ZR95GIiFRTKIiISDWFgoiI\nVFMoiIhINYWCiIhUUyiIiEi1gtslNWNffw3FtCvrTjuBjtcQkSwrnVD497/h6KPjriJ72rWDadOg\na9e4KxGRIlI6oTBkCEydGncV2bFgARx+OIwZA3fcEXc1IlJESicUNt883IrFqafC738P550H/frF\nXY2IFImcbmg2s4PN7DMzm2ZmlyUZv6+ZfWdm70a3Ubmsp6hcdRWUlcHIdK/oKSJSv5yFQnQh8buA\nQ4CBwHFmNjDJpP9y912i27W5qqfobLUVXHABPPoovP123NWISJHI5ZrCIGCau89w9zXARGBoDudX\nei69FDp1gss2WgkTEclILkOhOzA74fGcaFhtPzGz981sipltn+yFzOx0M6sws4qFCxfmotbC1KFD\n6D56/vlwExFppLgPXnsb6OXuOwG/Bf6abCJ3v9vdy929vEuXek8HXlrOOAN694bhw6GyMu5qRKTA\n5TIUvgJ6JjzuEQ2r5u5L3X15dH8y0MLMOuewpuLTqhWMHg3vvAOPPRZ3NSJS4HIZCm8B25hZXzNr\nCRwLTEqcwMy6mZlF9wdF9SzOYU3F6fjjYeedYcQIWLMm7mpEpIDlLBTcfR1wNvAs8AnwuLt/ZGbD\nzGxYNNlRwIdm9h4wHjjW3T1XNRWtZs1g3Dj44gv4wx/irkZECpgV2jK4vLzcdTnOJNzDUdvvvw/T\np0P79nFXJCJ5xMymunt5fdPFvaFZssUsrC0sWgQ33xx3NSJSoBQKxaS8HI45Bm65BebNi7saESlA\nCoViM3p02Nh8zTVxVyIiBUihUGz694f//m+45x74/PO4qxGRAqNQKEZXXgmtW4ddVEVEGkChUIy2\n2AIuvhieeALeeCPuakSkgCgUitWFF4arsg0fHnZXFRFJg0KhWLVrB6NGwcsvw5QpcVcjIgVCoVDM\nTjsNtt46nFp7/fq4qxGRAqBQKGYtW8L118MHH8DDD8ddjYgUAIVCsTvqqHBQ25VXwqpVcVcjInlO\noVDsqk6W9+WXcNddcVcjInlOoVAK9t8fDjoIxoyBb7+NuxoRyWMKhVIxblwIhHHj4q5ERPKYQqFU\n7Lwz/OpXcPvtMGdO3NWISJ5SKJSS664L13G++uq4KxGRPKVQKCV9+sCZZ8L998PHH8ddjYjkIYVC\nqRkxAtq2hSuuiLsSEclDCoVS07lzOB/SU0/Bv/8ddzUikmcUCqXovPNgyy3h0kt1sjwR2YBCoRRt\numnY2PzaazBpUtzViEgeUSiUqlNOge22g8svh3Xr4q5GRPKEQqFUlZXBDTfAJ5/AAw/EXY2I5AmF\nQik74gjYYw+46ir4/vu4qxGRPKBQKGVm4bQXX38N48fHXY2I5AGFQqnbay/42c9g7FhYvDjuakQk\nZgoFCRfiWbYs/BWRkqZQENhhB/j1r+HOO2HWrLirEZEYKRQkuOaacEGeUaPirkREYqRQkKBnTzj3\nXHjwQXjvvbirEZGYKBSkxmWXQYcO4YA2ESlJCgWpsfnm4eypU6bAP/8ZdzUiEgOFgmzonHNCV9Lw\n4TpZnkgJUijIhjbZBK69Ft56C554Iu5qRKSJKRRkYyeeCNtvH7qS1q6NuxoRaUIKBdlY8+bhCOdp\n0+Dee+OuRkSakEJBkjvsMNh773D8wvLlcVcjIk1EoSDJVZ0sb/58uPXWuKsRkSaiUJDUfvxj+MUv\n4KabYMGCuKsRkSaQ01Aws4PN7DMzm2Zml9Ux3e5mts7MjsplPZKB66+HlSth9Oi4KxGRJpCzUDCz\n5sBdwCHAQOA4MxuYYrpxwHO5qkUaYbvt4De/gQkTYPr0uKsRkRzL5ZrCIGCau89w9zXARGBokunO\nAZ4E1D+Rr666Clq0gJEj465ERHIsl6HQHZid8HhONKyamXUHjgR+X9cLmdnpZlZhZhULFy7MeqFS\njy23hAsugIkTYerUuKsRkRyKe0Pz7cBwd6+sayJ3v9vdy929vEuXLk1UmmzgkkugU6dw0jwRKVq5\nDIWvgJ4Jj3tEwxKVAxPNbCZwFPA7MzsihzVJpjp0gCuvhBdegOefj7saEcmRXIbCW8A2ZtbXzFoC\nxwKTEidw977u3sfd+wBPAGe6+19zWJM0xrBh0KdPOFleZZ0rdyJSoHIWCu6+DjgbeBb4BHjc3T8y\ns2FmNixX85UcatUq7Jr6zjth+4KIFB3zAjs9cnl5uVdUVMRdRumqrITddoNvv4VPPw1BISJ5z8ym\nunt5fdPFvaFZCk2zZuH0FzNnwh/+EHc1IpJlCgVpuAMOgMGD4brrYOnSuKsRkSxSKEjDmYVTay9a\nFM6LJCJFQ6EgmSkvh2OOCWdQnTs37mpEJEsUCpK5MWNgzZpwzQURKQoKBcnc1luHYxfuvRc++yzu\nakQkCxQK0jhXXgmtW8OIEXFXIiJZoFCQxunaFS6+GJ58Ev7zn7irEZFGUihI4110UQiH4cOhwA6G\nFJENKRSk8dq2DddceOUVmDw57mpEpBEUCpIdp50G/fuHU2uvXx93NSKSIYWCZEeLFuF6zh9+CA89\nFHc1IpIhhYJkz1FHwe67hz2SVq2KuxoRyYBCQbLHLJwsb/ZsuPPOuKsRkQwoFCS79tsPDj44dCUt\nWRJ3NSLSQAoFyb6xY8P1FsaNi7sSEWkghYJk3847wwknwB13hK4kESkYCgXJjWuvDVdpu/rquCsR\nkQZQKEhu9OkDZ50FDzwAH30UdzUikiaFguTOiBHhaOcrroi7EhFJk0JBcqdTp3CE86RJ8OqrcVcj\nImlQKEhunXcebLklXHqpTpYnUgAUCpJbbdqEK7O9/jo89VTc1YhIPRQKknsnnwwDBsDll8O6dXFX\nIyJ1UChI7pWVwQ03wKefwv33x12NiNRBoSBNY+hQ2GOPcN2F77+PuxoRSUGhIE3DDG68EebODUc6\ni0heUihI09lzT/j5z8O5kRYvjrsaEUlCoSBN6/rrYflyGDMm7kpEJAmFgjSt7beHk06Cu+6CmTPj\nrkZEalEoSNO75hpo1gxGjYq7EhGpJa1QMLPdkgw7PPvlSEno0SMc6fzQQ/Dee3FXIyIJ0l1TuMfM\ndqh6YGbHAVfmpiQpCcOHw2abhXMjiUjeSDcUjgL+18wGmNlpwJnAgbkrS4re5puHs6c+8wy8+GLc\n1YhIJK1QcPcZwLHAn4FfAge6+3e5LExKwNlnQ69ecOGFsH593NWICPWEgpl9YGbvm9n7wBNAR6Av\n8EY0TCRzm2wCN98ctitMmBB3NSIClNUzXhuTJbeOOgoGD4aRI+Hoo6FLl7grEilpda4puPssd59F\nCI950f2+wFBA3UfSeGYwfnw4oE1XaBOJXbobmp8E1ptZf+BuoCfwSM6qktIycGDYRfWPf4Q334y7\nGpGSlm4oVLr7OuAXwG/d/RJgy/qeZGYHm9lnZjbNzDba99DMhkbbLN41swoz27Nh5UvRGDUKunWD\ns86Cysq4qxEpWemGwtro2IT/Av4eDWtR1xPMrDlwF3AIMBA4zswG1prsH8DO7r4LcApwb7qFS5Fp\n3x5uugkqKuC+++KuRqRkpRsKJwN7AGPc/Qsz6ws8WM9zBgHT3H2Gu68BJhK2RVRz9+Xu1Rfu3RTQ\nRXxL2fHHw157hQPavvkm7mpESlK6xyl87O7nuvuj0eMv3H1cPU/rDsxOeDwnGrYBMzvSzD4Fnias\nLWzEzE6PupcqFi5cmE7JUojM4M47YckSuFIHzIvEob7jFB6P/lYfr5B4y0YB7v4Xdx8AHAFcl2Ka\nu9293N3Lu2iXxeK2005hu8KECfDOO3FXI1Jy6jtO4bzobybHK3xF2EupSo9oWFLu/oqZ9TOzzu6+\nKIP5SbG49lqYODEc8fyvf4UzqopIk6jvOIW50d9ZiTdCt1B9ewq9BWxjZn3NrCXhNBmTEicws/5m\nZtH9XYFWgC7JVeo22wzGjYPXXgtnUhWRJlNf91F7M7vczO40swMtOAeYARxd13OjXVjPBp4FPgEe\nd/ePzGyYmQ2LJvsl8KGZvUvYU+mYhA3PUsp+/Wv40Y/g0kvhOx0nKdJUrK5lsJk9BSwBXgcGA10B\nA85z93ebpMJaysvLvaKiIo5ZS1OrqIBBg8KBbbfdFnc1IgXNzKa6e3l909W3TaGfu+8YveC9wFyg\nl7uvykKNInUrL4fTT4ff/hZOPRV22KH+54hIo9S3BW9t1R13Xw/MUSBIkxozBjp0gHPOAfUsiuRc\nfaGws5ktjW7LgJ2q7pvZ0qYoUEpcp04hGF56CR57LO5qRIpefXsfNXf39tGtnbuXJdxv31RFSok7\n7TTYdVe46KJwNlURyRntAC75r3nzcKTz11/D6NFxVyNS1BQKUhj22ANOOgluvRU++yzuakSKlkJB\nCsfYsdCmjTY6i+SQQkEKxxZbhFNgPP88/PWvcVcjUpQUClJYzjwTdtwRzj8fvv8+7mpEio5CQQpL\nWVnY6Pzll6E7SUSySqEghWfvvcMFeW68EaZPj7sakaKiUJDCdNNN0KJF6EYSkaxRKEhh2moruOoq\n+Pvfw01EskKhIIXr3HNhwICwtrBKp+QSyQaFghSuli3DGVSnT4ebb467GpGioFCQwjZkCBx1FFx/\nPcyaFXc1IgVPoSCF75Zbwt+LLoq3DpEioFCQwterF4wYAU8+GY52FpGMKRSkOFx8MfTvH86LtGZN\n3NWIFCyFghSHVq3gjjvCGVTvuCPuakQKlkJBisehh8LPfhZOmvfVV3FXI1KQFApSXG6/HdauhUsu\nibsSkYKkUJDi0q8fDB8Ojz4KL78cdzUiBUehIMVn+HDo3RvOPhvWrYu7GpGColCQ4tOmTehG+vBD\nuOuuuKsRKSgKBSlOQ4fCQQfBqFEwf37c1YgUDIWCFCczGD8eVq6Eyy6LuxqRgqFQkOK17bbh1BcP\nPACvvx53NSIFQaEgxW3ECOjeHc46C9avj7sakbynUJDi1rZtOGHeO+/APffEXY1I3lMoSPE7+mjY\nbz+44gpYtCjuakTymkJBip9ZuBjP0qWhO0lEUlIoSGnYfvtw+c577oGKirirEclbCgUpHVdfDV27\nhiOdKyvjrkYkLykUpHS0bw833QRvvBF2UxWRjSgUpLSccAL89KfhgLYlS+KuRiTvKBSktJjBnXfC\n4sXhFBgisgGFgpSeXXaBM86A3/0O3nsv7mpE8opCQUrTdddBx45ho7N73NWI5I2choKZHWxmn5nZ\nNDPb6KxkZvYrM3vfzD4ws9fMbOdc1iNSbfPNYexYePVVePjhuKsRyRs5CwUzaw7cBRwCDASOM7OB\ntSb7AtjH3XcErgPuzlU9Ihs5+WTYffdw6c6lS+OuRiQv5HJNYRAwzd1nuPsaYCIwNHECd3/N3at2\nAfkP0COH9YhsqFmzcBGe+fPh2mvjrkYkL+QyFLoDsxMez4mGpXIqMCXZCDM73cwqzKxi4cKFWSxR\nSt7uu8NvfgN33AEffxx3NSKxy4sNzWa2HyEUhicb7+53u3u5u5d36dKlaYuT4nf99dCuHZxzjjY6\nS8nLZSh8BfRMeNwjGrYBM9sJuBcY6u6Lc1iPSHKdO8OYMfDii/DEE3FXIxKrXIbCW8A2ZtbXzFoC\nxwKTEicws17An4ET3f3zHNYiUrfTTw/HL1x4ISxfHnc1IrHJWSi4+zrgbOBZ4BPgcXf/yMyGmdmw\naLJRQCfgd2b2rpnp9JUSj+bNw0bnOXNCd5JIiTIvsD7U8vJyr9CpjyVXTjoJHnkEPvwwXONZpEiY\n2VR3L69vurzY0CySN8aOhdat4bzztNFZSpJCQSRRt25wzTXwzDMwaVL904sUGYWCSG1nnw077ADn\nnw8rV8ZdjUiTUiiI1FZWFq7pPHMmjBsXdzUiTUqhIJLMvvvCsceGbQwzZsRdjUiTUSiIpHLzzWGt\n4cIL465EpMkoFERS6d49XJ3tqadgStLTcokUHYWCSF3OPx+22w7OPRdWr467GpGcUyiI1KVlSxg/\nHqZNg1tvjbsakZxTKIjU58AD4Re/gNGj4csv465GJKcUCiLpuPXWcITzxRfHXYlITikURNLRuzdc\ncQX86U/wj3/EXY1IzigURNJ18cXQr1+4GM+aNXFXI5ITCgWRdG2ySbhs5yefhCOeRYqQQkGkIQ4/\nPNyuvhrmzo27GpGsUyiINNTtt4fuo0suibsSkaxTKIg01NZbw6WXwsMPwyuvxF2NSFYpFEQycfnl\n0KtX2Oi8bl3c1YhkjUJBJBNt2sBtt8H778OECXFXI5I1CgWRTB15JBxwAIwcCQsWxF2NSFYoFEQy\nZRZ2Tf3++9CdJFIEFAoijbHddnDBBXDfffDGG3FXI9JoCgWRxho5ErbaCs46C777LpwjSaRAlcVd\ngEjBa9cObrkFjjsONtssnG67a9eNb126JB/WunXcLRCpplAQyYZjjoH27cMpMBYsgIULw98FC8Kw\n+fNh1arkz23XLnVo1A6Qzp3DJUJFckT/XSLZYAaHHhpuybjDihU1QVE7OKpuM2fCm2+GcevXJ59P\nx47prYV07RrWXMxy2vRYuYejy1evDqG7enXNrepxsvexUPXoAX375nQWCgWJzdKl8OqrsPnmMGgQ\nNG8ed0U5ZAZt24Zbv371T19ZCd9+u3Fo1L598EH4+803yV+nrKz+tZDEcZtuml5ta9akXggne5zp\nuPqmLbVLpA4fDmPH5nQWCgVpMmvXhh/Bzz8fbm+8UfMjrmNHOPhgOOwwOOgg6NQp3lpj16xZeFM6\ndoQBA+qffu1aWLRo49CovTYybVr4u2JF8tdp0yaEQ4cO4TWTLaDXrs1OG83CmWdbtar5W3Wrety6\ndfjVkGxcXfcTHxdTd1vv3jmfRRG9W5Jv3OHTT0MAvPACvPQSLFsWlgXl5eFHz/77h2XZ00/DlCnw\nyCNhefjjH9f0xuyyS3H3gGRFixaw5Zbhlo4VK0JgJOvCWrAgrKUkLmAzWRjXN66sTB9sHjIvsN3n\nysvLvaKiIu4yJIV580IAVN2++ioM33rrcPDvkCGw337hB3BtlZVQURECYvLkcB/Ccu7QQ8NaxJAh\nYbusiDSMmU119/J6p1MoSGOsWBFOFFq1NvDBB2F4p04weHBYiA8Zktm2sfnzw9rD5Mnw7LNhG0SL\nFrDXXiEgDj00HDumH5si9VMoSE6sWwdTp9aEwGuvhS7mVq3CwnrIkLBGsMsuoRsoW9auDfOaPDms\nSXz0URjer19NN9O++2qXf5FUFAqSFe5h2+QLL4QgePHFcNAuwA9/WNMltOeeTbtAnjUrrEU8/TT8\n4x+wcmWY//7713Q1NcE2OZGCoVCQjC1cGBb+VWsDs2aF4b1714TA/vuHPRnzwapV8PLLISCefhpm\nzAjDBw6s6Wb66U9D15NIqVIoSNpWrgzHC1SFwDvvhOEdOoSF/wEHhNvWW+d//707fP556GaaPDmE\nxdq14WDE5NM3AAAIEklEQVTjAw8MAXHIIdCtW9yVijQthYKkVFkZFvxVXUKvvhp2QW/RAn7yk5q1\ngd12K/xdvJctC91LVXs0ff11GL7bbjXdTOXlRX7gXB3WrIE5c+DLL8Ma4axZ4f7ChWHv0TZtwvFs\nbdpseEtn2Kabau0snygUZANffLHhdoHFi8PwHXesCYG9907vgNZC5R4ulFYVEK+/HgKyc+eaA+cO\nPDD57rKFaunSmgV94kK/6u/XX298Utdu3cLxa6tXh0tFrFgR/qY6dVNdysoyC5OGhFCLFvm/BpsP\nFAolbsmSDbcLTJ8ehm+1VU130ODBpd2NsngxPPdcCIgpU8LjZs3C2lLVHk077ZS/C5zKyrDbbl0L\n/W+/3fA5LVtCz55h+1CvXuFv4v0ePcIaQqr5rVxZExKJt2wNW7my4e9D8+Z1B0cxhcaRR8KJJ2b2\nXIVCiVm9OuyyWbU2MHVq+BK3axd21axaGxgwoHi+INm0fj289VbNLq9vvx2Gd+9e0800eHA4dVFT\nWb0aZs9OvdCfPTt0/yTabLPkC/uqv1tskd1dhbOtsjKskWQzeGq/R4XslFPg/PMze25ehIKZHQzc\nATQH7nX3sbXGDwDuB3YFRrj7zfW9pkIhqKwMB4pVhcArr4RfWc2bh1NEVIXAoEHq183E3LnwzDMh\nIJ57LmybaNkS9tmnZi1i220zf333sGtvsl/3VcPmzdvwOWZhTa+uhX779o1rtxSv2EPBzJoDnwMH\nAHOAt4Dj3P3jhGm6Ar2BI4AluQyFF16AK65o8NPy1qxZNdeK/8EPakJgn320YMi2NWvCWljVtoiP\no//g/v1r1iL23nvDbpf168NCva6F/rJlG85nk002XsgnBkD37iGYRDKRbijkct+SQcA0d58RFTQR\nGApUh4K7LwAWmNlhOawDCEfcdu6c67k0nQEDQnfG4MGhH1hyp2XL0AW3775w001ho33V6TfuvhvG\njw/913vtFbp8Zs0Ke/TUPplox45h4d6/f9jVt/ZCv0sXde1J/HIZCt2B2QmP5wA/yuSFzOx04HSA\nXr16ZVTMXnuFm0hj9e0LZ54ZbitXhrO/Vh0T0aFD2FBdu4unV6+m3R4hkqmC2Avd3e8G7obQfRRz\nOSLVWrcOB8MdckjclYhkRy73Q/gK6JnwuEc0TERE8lQuQ+EtYBsz62tmLYFjgUk5nJ+IiDRSzrqP\n3H2dmZ0NPEvYJfU+d//IzIZF4yeYWTegAmgPVJrZ+cBAd1+aq7pERCS1nG5TcPfJwORawyYk3J9H\n6FYSEZE8kMfHNoqISFNTKIiISDWFgoiIVFMoiIhItYI7S6qZfQf8X8KgDsB3KR5X3a/62xlY1IjZ\n155XQ6ZJNjyd2lPdb0xbGtOOVOMKsS0NbUftx7X/v6Bw2pLLz6SuOtOZJp/akg/flWz9f23j7h3q\nncrdC+oG3J3u46r7CX8rsjnvhkyTbHg6tdfRpozb0ph2FFNbGtqO+v6/CqktufxMiqkt+fBdacr/\nL3cvyO6jvzXg8d9STJOteTdkmmTD06m9rvuZakw7Uo0rxLY0tB21H+v/K7ViaUs+fFea8jMpvO6j\nxjCzCk/j1LGFQG3JT8XSlmJpB6gtDVWIawqNcXfcBWSR2pKfiqUtxdIOUFsapKTWFEREpG6ltqYg\nIiJ1UCiIiEg1hYKIiFRTKETM7AdmNsHMnjCzM+KupzHM7Agzu8fMHjOzA+OupzHMrJ+Z/dHMnoi7\nloYys03N7H+iz+JXcdfTGIX8OdRWLN+PnC2zGnOASr7cgPuABcCHtYYfDHwGTAMuS/O1mgEPFUlb\nNgf+WCRteSLu/7OGtgk4EfhZdP+xuGvPxueTL59DltoS6/cji+3I6jIr9jchS2/k3sCuiW8k4cI+\n04F+QEvgPWAgsCPw91q3rtFzfg5MAY4v9LZEz7sF2LVI2pIXC6MGtulyYJdomkfirr0xbcm3zyFL\nbYn1+5GNduRimZXTi+w0FXd/xcz61Bo8CJjm7jMAzGwiMNTdbwAOT/E6k4BJZvY08EjuKk4tG20x\nMwPGAlPc/e3cVpxatj6XfNKQNgFzCBeRepc87KptYFs+btrqGqYhbTGzT8iD70cyDf1McrHMyrt/\n1CzqDsxOeDwnGpaUme1rZuPN7A/UulpcHmhQW4BzgCHAUVWXP80jDf1cOpnZBOCHZnZ5rovLUKo2\n/Rn4pZn9nuydqiDXkralQD6H2lJ9Lvn8/Ugm1WeSk2VWUawpZIO7vwS8FHMZWeHu44HxcdeRDe6+\nGCiEL+5G3H0FcHLcdWRDIX8OtRXL9yNXy6xiXlP4CuiZ8LhHNKwQqS35rZjapLbknyZtRzGHwlvA\nNmbW18xaAscCk2KuKVNqS34rpjapLfmnadsR99b2LG2xfxSYC6wl9LedGg0/FPicsOV+RNx1qi2F\n25ZibJPakn+3fGiHTognIiLVirn7SEREGkihICIi1RQKIiJSTaEgIiLVFAoiIlJNoSAiItUUCiJZ\nYGbdzGyimU03s6lmNtnMto27LpGG0rmPRBopOivtX4D/cfdjo2E7A1sQDjgSKRgKBZHG2w9Y6+4T\nqga4+3sx1iOSMXUfiTTeDsDUuIsQyQaFgoiIVFMoiDTeR8BucRchkg0KBZHGexFoZWanVw0ws53M\nbK8YaxLJiEJBpJE8nGr4SGBItEvqR8ANwLx4KxNpOJ06W0REqmlNQUREqikURESkmkJBRESqKRRE\nRKSaQkFERKopFEREpJpCQUREqikURESk2v8DI89Q+eSgof0AAAAASUVORK5CYII=\n",
      "text/plain": [
       "<matplotlib.figure.Figure at 0x1101bd518>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "# plot losses against Cs\n",
    "plt.figure()\n",
    "plt.semilogx(Cs, zero_loss, c=\"red\")\n",
    "plt.semilogx(Cs, unbalanced, c=\"blue\")\n",
    "plt.title('0-1-loss and unbalanced loss for different Cs')\n",
    "plt.xlabel('C')\n",
    "plt.ylabel('Risk')"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### We would prefer $C = 1$ or $C = 0.001$ for the unbalanced loss and $C = 10$ for the 0-1 loss.  This means that the best $C$ of exercise b) changes. We also notice that the Risk for the unbalanced loss is bouncing. "
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### e)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 26,
   "metadata": {
    "collapsed": false
   },
   "outputs": [],
   "source": [
    "X, Y = make_classification(n_samples=200, n_features=2, n_informative=2, n_redundant=0, n_repeated=0, n_classes=2, n_clusters_per_class=2, random_state=42, class_sep=0.75)\n",
    "X_train, Y_train = X[:120], Y[:120]\n",
    "X_test, Y_test = X[120:], Y[120:]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 15,
   "metadata": {
    "collapsed": true
   },
   "outputs": [],
   "source": [
    "parameters = {'C':[0.001, 0.01, 0.1, 1, 10, 100, 1000], \n",
    "              'gamma': [0.001, 0.01, 0.1, 1, 10, 100, 1000, 'auto']}\n",
    "Cs = parameters['C']\n",
    "Gammas = parameters['gamma']"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 16,
   "metadata": {
    "collapsed": false
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "{'C': 1, 'gamma': 'auto'}"
      ]
     },
     "execution_count": 16,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "svc = svm.SVC(kernel = 'rbf')\n",
    "gauss_clf = GridSearchCV(svc, parameters)\n",
    "gauss_clf.fit(X_train, Y_train)\n",
    "gauss_clf.best_params_"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### The best parameters for the Gaussian Kernel seem to be $C = 1$ and $\\gamma = auto$."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 17,
   "metadata": {
    "collapsed": false
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "{'C': 0.1, 'gamma': 0.001}"
      ]
     },
     "execution_count": 17,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "svc = svm.SVC(kernel = 'linear')\n",
    "lin_clf = GridSearchCV(svc, parameters)\n",
    "lin_clf.fit(X_train, Y_train)\n",
    "lin_clf.best_params_"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### The best parameters for the Linear Kernel seem to be $C = 0.1$ and $\\gamma = 0.001$."
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### We found out that the computational time for the polynomial kernel was way too large, so we decided to normalize our training data."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 23,
   "metadata": {
    "collapsed": false
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "{'C': 0.001, 'gamma': 0.001}"
      ]
     },
     "execution_count": 23,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "X_train = normalize(X_train)\n",
    "svc = svm.SVC(kernel = 'poly', degree = 2)\n",
    "poly2_clf = GridSearchCV(svc, parameters)\n",
    "poly2_clf.fit(X_train, Y_train)\n",
    "poly2_clf.best_params_"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### The best parameters for the Polynomial Kernel with degree 2 seem to be $C = 0.001$ and $\\gamma = 0.001$."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "collapsed": true
   },
   "outputs": [],
   "source": [
    "X_train = normalize(X_train)\n",
    "svc = svm.SVC(kernel = 'poly', degree = 3)\n",
    "poly3_clf = GridSearchCV(svc, parameters)\n",
    "poly3_clf.fit(X_train, Y_train)\n",
    "poly3_clf.best_params_"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### The best parameters for the Polynomial Kernel with degree 3 seem to be $C = 1$ and $\\gamma = auto$."
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### f)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 18,
   "metadata": {
    "collapsed": true
   },
   "outputs": [],
   "source": [
    "# make meshgrid\n",
    "def make_meshgrid(x, y, h=.02):\n",
    "    \"\"\"Create a mesh of points to plot in\n",
    "\n",
    "    Parameters\n",
    "    ----------\n",
    "    x: data to base x-axis meshgrid on\n",
    "    y: data to base y-axis meshgrid on\n",
    "    h: stepsize for meshgrid, optional\n",
    "\n",
    "    Returns\n",
    "    -------\n",
    "    xx, yy : ndarray\n",
    "    \"\"\"\n",
    "    x_min, x_max = x.min() - 1, x.max() + 1\n",
    "    y_min, y_max = y.min() - 1, y.max() + 1\n",
    "    xx, yy = np.meshgrid(np.arange(x_min, x_max, h),\n",
    "                         np.arange(y_min, y_max, h))\n",
    "    return xx, yy"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 19,
   "metadata": {
    "collapsed": true
   },
   "outputs": [],
   "source": [
    "# plot contours\n",
    "def plot_contours(clf, xx, yy, **params):\n",
    "    \"\"\"Plot the decision boundaries for a classifier.\n",
    "\n",
    "    Parameters\n",
    "    ----------\n",
    "    ax: matplotlib axes object\n",
    "    clf: a classifier\n",
    "    xx: meshgrid ndarray\n",
    "    yy: meshgrid ndarray\n",
    "    params: dictionary of params to pass to contourf, optional\n",
    "    \"\"\"\n",
    "    Z = clf.predict(np.c_[xx.ravel(), yy.ravel()])\n",
    "    Z = Z.reshape(xx.shape)\n",
    "    return plt.contourf(xx, yy, Z, **params)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 27,
   "metadata": {
    "collapsed": false
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<matplotlib.text.Text at 0x111f13080>"
      ]
     },
     "execution_count": 27,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "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\n",
      "text/plain": [
       "<matplotlib.figure.Figure at 0x110b3c4e0>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "gauss_svc = svm.SVC(kernel = 'rbf', C = 1, gamma = 'auto')\n",
    "gauss_svc.fit(X_train, Y_train)\n",
    "X0, X1 = X_train[:, 0], X_train[:, 1]\n",
    "xx, yy = make_meshgrid(X0, X1)\n",
    "plot_contours(gauss_svc, xx, yy, cmap=plt.cm.coolwarm, alpha=0.8)\n",
    "plt.scatter(X0, X1, c=Y_train, cmap=plt.cm.coolwarm, s=20, edgecolors='k')\n",
    "plt.xlim(xx.min(), xx.max())\n",
    "plt.ylim(yy.min(), yy.max())\n",
    "plt.title('Results of the Gaussian SVM')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 29,
   "metadata": {
    "collapsed": false
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<matplotlib.text.Text at 0x112180a58>"
      ]
     },
     "execution_count": 29,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "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\n",
      "text/plain": [
       "<matplotlib.figure.Figure at 0x110b1cf98>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "lin_svc = svm.SVC(kernel = 'linear', C = 0.1, gamma = 0.001)\n",
    "lin_svc.fit(X_train, Y_train)\n",
    "plot_contours(lin_svc, xx, yy, cmap=plt.cm.coolwarm, alpha=0.8)\n",
    "plt.scatter(X0, X1, c=Y_train, cmap=plt.cm.coolwarm, s=20, edgecolors='k')\n",
    "plt.xlim(xx.min(), xx.max())\n",
    "plt.ylim(yy.min(), yy.max())\n",
    "plt.title('Results of the Linear SVM')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 30,
   "metadata": {
    "collapsed": false
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<matplotlib.text.Text at 0x110b4eeb8>"
      ]
     },
     "execution_count": 30,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "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\n",
      "text/plain": [
       "<matplotlib.figure.Figure at 0x111ed9f28>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "X_train = normalize(X_train)\n",
    "X0, X1 = X_train[:, 0], X_train[:, 1]\n",
    "xx, yy = make_meshgrid(X0, X1)\n",
    "poly2_svc = svm.SVC(kernel = 'poly', degree = 2, C = 0.001, gamma = 0.001)\n",
    "poly2_svc.fit(X_train, Y_train)\n",
    "plot_contours(poly2_svc, xx, yy, cmap=plt.cm.coolwarm, alpha=0.8)\n",
    "plt.scatter(X0, X1, c=Y_train, cmap=plt.cm.coolwarm, s=20, edgecolors='k')\n",
    "plt.xlim(xx.min(), xx.max())\n",
    "plt.ylim(yy.min(), yy.max())\n",
    "plt.title('Results of the Polynomial, degree = 2 SVM')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "collapsed": true
   },
   "outputs": [],
   "source": [
    "plot_contours(poly3_clf, xx, yy, cmap=plt.cm.coolwarm, alpha=0.8)\n",
    "plt.scatter(X0, X1, c=Y_train, cmap=plt.cm.coolwarm, s=20, edgecolors='k')\n",
    "plt.xlim(xx.min(), xx.max())\n",
    "plt.ylim(yy.min(), yy.max())\n",
    "plt.title('Results of the Polynomial, degree = 3 SVM')"
   ]
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.6.0"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 2
}
